# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login de Bombeiros</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .login-container {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 300px;
            text-align: center;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .message {
            color: red;
            font-size: 0.9em;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form id="loginForm">
            <input 
                type="text" 
                id="cpf" 
                placeholder="Digite seu CPF" 
                maxlength="14" 
                required 
                oninput="formatCPF(this)"
            >
            <p id="userMessage" class="message"></p>

            <input 
                type="password" 
                id="senha" 
                placeholder="Digite sua senha" 
                required
            >
            <p id="senhaMessage" class="message"></p>

            <button type="button" onclick="validateLogin()">Entrar</button>
        </form>
    </div>

    <script>
        const usuarios = {
            '034.481.780-63': { nome: 'Bombeiro Eleandro', senha: '200420024' }
        };

        function formatCPF(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.length > 11) value = value.slice(0, 11);
            input.value = value
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})\.(\d{3})(\d)/, '$1.$2.$3')
                .replace(/(\d{3})\.(\d{3})\.(\d{3})(\d{2})/, '$1.$2.$3-$4');

            const userMessage = document.getElementById('userMessage');
            if (usuarios[input.value]) {
                userMessage.textContent = `Olá, ${usuarios[input.value].nome}!`;
                userMessage.className = 'message success';
            } else if (value.length === 11) {
                userMessage.textContent = 'Bombeiro Não Cadastrado.';
                userMessage.className = 'message';
            } else {
                userMessage.textContent = '';
            }
        }

        function validateLogin() {
            const cpf = document.getElementById('cpf').value;
            const senha = document.getElementById('senha').value;
            const senhaMessage = document.getElementById('senhaMessage');

            if (usuarios[cpf]) {
                if (usuarios[cpf].senha === senha) {
                    window.location.href = 'https://example.com'; // Substitua pelo link desejado
                } else {
                    senhaMessage.textContent = 'Senha incorreta';
                }
            } else {
                senhaMessage.textContent = 'Bombeiro Não Cadastrado.';
            }
        }
    </script>
</body>
</html>
